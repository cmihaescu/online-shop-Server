{"version":3,"sources":["Components/Requests/CheckoutSandbox.js","Components/Requests/CheckoutLive.js","Components/Home.js","Components/Requests/ConfirmOrder.js","Components/PaymentSandbox.js","Components/Requests/UpdateOrder.js","Components/PaymentLive.js","Components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["CheckoutSandbox","sum","currency","customer_id","history","a","data","amount","fetch","method","body","JSON","stringify","headers","then","res","json","push","console","error","CheckoutLive","Home","useState","setCurrency","searchfield","setSearchfield","cart","setCart","setSum","items","name","price","useHistory","useEffect","map","item","reduce","prevVal","currVal","className","style","display","gridTemplateColumns","textAlign","justifyContent","margin","placeholder","onChange","event","target","value","padding","filter","toLowerCase","includes","i","Math","round","Number","onClick","addToCart","length","listStyle","width","splice","removeFromCart","background","borderRadius","id","ConfirmOrder","payment_method_id","order_id","alert","PaymentSandbox","setName","email","setEmail","countryCode","region","city","streetLine1","streetLine2","postcode","billingAddress","setBillingAddress","log","getBillingAddress","e","public_id","location","state","RevolutCheckout","instance","card","createCardField","document","getElementById","onSuccess","setTimeout","window","onError","message","addEventListener","submit","React","revolutPay","phone","buttonStyle","variant","to","flexDirection","onSubmit","preventDefault","alignItems","border","payWithPopup","savePaymentMethodFor","title","undefined","UpdateOrderLive","PaymentLive","setResult","order_amount","RC","shippingOptions","label","description","paymentRequest","requestShipping","onShippingOptionChange","selectedShippingOption","Promise","resolve","status","total","onShippingAddressChange","selectedShippingAddress","newShippingOption","canMakePayment","result","render","destroy","payWithRevolutApple","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.de5d8ab0.chunk.js","sourcesContent":["const CheckoutSandbox = async (sum, currency, customer_id, history) => {\r\n  let data = { amount: sum*100, currency, customer_id };\r\n\r\n  try {\r\n    await fetch(\"https://revolut-server.herokuapp.com/card/newOrderSandbox\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data)\r\n      .then((body) => {\r\n        history.push(\"/cardSandbox\", body);\r\n      });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport default CheckoutSandbox;\r\n","const CheckoutLive = async (sum, currency, history) => {\r\n  let data = { amount: sum*100, currency };\r\n\r\n  try {\r\n    await fetch(\"/card/newOrderLive\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data)\r\n      .then((body) => {\r\n        history.push(\"/cardLive\", body);\r\n      });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport default CheckoutLive;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CheckoutSandbox from \"./Requests/CheckoutSandbox\";\r\nimport CheckoutLive from \"./Requests/CheckoutLive\";\r\nimport RevolutCheckout from \"@revolut/checkout\";\r\n\r\n//  - pt package.json \"proxy\":\"http://localhost:4000\"\r\n// \"proxy\": \"https://revolut-server.herokuapp.com/\"\r\n\r\nfunction Home() {\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n  const [searchfield, setSearchfield] = useState(\"\");\r\n  const [cart, setCart] = useState([]);\r\n  const [sum, setSum] = useState(0);\r\n  // const [capture, setCapture] = useState(0);\r\n  const currencies = [\"USD\", \"EUR\", \"GBP\", \"RON\", \"JPY\", \"CZK\", \"AUD\", \"CAD\", \"AED\", \"CHF\", \"DKK\", \"HKD\", \"NOK\", \"NZD\", \"PLN\", \"QAR\", \"SEK\", \"SGD\", \"TRY\", \"ZAR\"];\r\n  const [result, setResult] = useState(null);\r\n  let customer_id = \"16ec0824-1a78-4032-adfa-fefab834a591\";\r\n  \r\n\r\n  const items = [\r\n    { name: \"Backpack\", price: 150 },\r\n    { name: \"Hat\", price: 0.05 },\r\n    { name: \"Jacket\", price: 300 },\r\n    { name: \"Boots\", price: 250 },\r\n    { name: \"Skis\", price: 600 },\r\n    { name: \"Gloves\", price: 10 },\r\n    { name: \"Shirt\", price: 20 },\r\n    { name: \"Pants\", price: 25 },\r\n    { name: \"Glasses\", price: 40 },\r\n    { name: \"Snowboard\", price: 500 },\r\n  ];\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const reducer = (prevVal, currVal) => prevVal + currVal;\r\n    setSum(cart.map((item) => item.price).reduce(reducer, 0));\r\n  }, [cart]);\r\n\r\n  const addToCart = (i) => {\r\n    setCart([...cart, items[i]]);\r\n  };\r\n\r\n  const removeFromCart = (i) => {\r\n    cart.splice(i, 1);\r\n    setCart([...cart]);\r\n  };\r\n\r\n  //============PAY WITH APPLE/GOOGLE PAY============\r\n\r\n  // const payWithRevolutApple = () => {\r\n  //   const RC = RevolutCheckout(\"6dd2395d-1f7e-4f7e-8d87-2979304340ba\", \"prod\");\r\n  //   const shippingOptions = [\r\n  //     {\r\n  //       id: \"flex\",\r\n  //       label: \"The big flex express shipping\",\r\n  //       amount: 1,\r\n  //       description: \"The shipping method faster than batman\",\r\n  //     },\r\n  //     {\r\n  //       id: \"countrystrong\",\r\n  //       label: \"Country strong shipping\",\r\n  //       amount: 3,\r\n  //       description: \"The shipping method faster than superman\",\r\n  //     },\r\n  //   ];\r\n\r\n  //   const paymentRequest = RC.paymentRequest({\r\n  //     target: document.getElementById(\"revolut-payment-request\"),\r\n  //     requestShipping: true,\r\n  //     shippingOptions,\r\n  //     onShippingOptionChange: (selectedShippingOption) => {\r\n  //       // ideally compute new total price. calls can be made to a server here\r\n  //       return Promise.resolve({\r\n  //         status: \"success\",\r\n  //         total: {\r\n  //           amount: sum + selectedShippingOption.amount,\r\n  //         },\r\n  //       });\r\n  //     },\r\n  //     onShippingAddressChange: (selectedShippingAddress) => {\r\n  //       // ideally compute new total price. calls can be made to a server here\r\n  //       const newShippingOption = {\r\n  //         id: \"new-shipping\",\r\n  //         label: \"The new ultra-fast method\",\r\n  //         amount: 5,\r\n  //         description: \"The shipping method faster than lightening\",\r\n  //       };\r\n\r\n  //       return Promise.resolve({\r\n  //         status: \"success\",\r\n  //         shippingOptions: [newShippingOption, ...shippingOptions],\r\n  //         total: {\r\n  //           amount: 5,\r\n  //           // amount: amount + newShippingOption.amount,\r\n  //         },\r\n  //       });\r\n  //     },\r\n  //     onSuccess() {\r\n  //       setResult(\"Paid\");\r\n  //       alert(\"Payment with Google/Apple pay was succesfull!\");\r\n  //     },\r\n  //     onError(error) {\r\n  //       setResult(`Error: ${error.message}`);\r\n  //       alert(error);\r\n  //     },\r\n  //     // buttonStyle: { size: 'small', variant: 'light-outlined' },\r\n  //   });\r\n\r\n  //   paymentRequest.canMakePayment().then((result) => {\r\n  //     if (result) {\r\n  //       paymentRequest.render();\r\n  //     } else {\r\n  //       setResult(\"Not supported\");\r\n  //       paymentRequest.destroy();\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1> Revolut Shop </h1>\r\n      <div        \r\n        style={{ display: \"grid\", gridTemplateColumns: \"1fr 3fr\" }}\r\n      >\r\n        <div className=\"items\">\r\n          <div className=\"itemsList\" style={{ textAlign: \"left\" }}>\r\n            <ul>\r\n              <li\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  margin: \"5px\",\r\n                }}\r\n              >\r\n                <input\r\n                  style={{ display: \"inline-block\", margin: \"1em 5px 5px 5px\" }}\r\n                  placeholder=\"Search item\"\r\n                  onChange={(event) => {\r\n                    setSearchfield(event.target.value);\r\n                  }}\r\n                ></input>\r\n                <select\r\n                  className=\"pay-option-button\"\r\n                  style={{ padding: \"0px 10px\" }}\r\n                  onChange={(event) => setCurrency(event.target.value)}\r\n                  placeholder=\"USD\"\r\n                >\r\n                  {currencies.map((currency) => (\r\n                    <option key={currency}> {currency} </option>\r\n                  ))}\r\n                </select>\r\n              </li>\r\n              {items\r\n                .filter((item) =>\r\n                  item.name.toLowerCase().includes(searchfield.toLowerCase())\r\n                )\r\n                .map((item, i) => {\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        margin: \"5px\",\r\n                      }}\r\n                    >\r\n                      {item.name} Price:{\" \"}\r\n                      {currency === \"USD\"\r\n                        ? Math.round(Number(item.price))\r\n                        : currency === \"GBP\"\r\n                        ? Math.round(Number(item.price) * 0.74)\r\n                        : currency === \"EUR\"\r\n                        ? Math.round(Number(item.price) * 0.87)\r\n                        :currency === \"JPY\"\r\n                        ? Math.round(Number(item.price)*127,12)\r\n                        : Math.round(Number(item.price) * 4.28)}{\" \"}\r\n                      {currency}\r\n                      <button\r\n                        className=\"pay-option-button\"\r\n                        onClick={() => {\r\n                          addToCart(i);\r\n                        }}\r\n                      >\r\n                        Add to cart\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"Cart\" style={{ textAlign: \"center\" }}>\r\n          {cart.length > 0 ? (\r\n            <div>\r\n              <h2>Cart</h2>\r\n              <ul style={{ listStyle: \"none\" }}>\r\n                {cart.map((item, i) => {\r\n                  return (\r\n                    <li\r\n                      key={i}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        width: \"40%\",\r\n                        margin: \"0 auto\",\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                      <button\r\n                        className=\"pay-option-button\"\r\n                        onClick={() => removeFromCart(i)}\r\n                        style={{ margin: \"5px\" }}\r\n                      >\r\n                        Remove from Cart\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n              <button\r\n                className=\"pay-option-button\"\r\n                onClick={() => CheckoutSandbox(sum, currency, customer_id, history)}\r\n              >\r\n                {\" \"}\r\n                Go to Checkout-Sandbox\r\n              </button>\r\n              <button\r\n                className=\"pay-option-button\"\r\n                onClick={() => CheckoutLive(sum, currency, history)}\r\n              >\r\n                {\" \"}\r\n                Go to Checkout-Live\r\n              </button>\r\n              <p style={{background:'linear-gradient(90deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.7) 50%, rgba(0,0,0,0) 100%)'}}>\r\n                Total:{\" \"}\r\n                {currency === \"GBP\"\r\n                  ? Math.round(sum * 0.74)\r\n                  : currency === \"EUR\"\r\n                  ? Math.round(sum * 0.87)\r\n                  : currency === \"RON\"\r\n                  ? Math.round(sum * 4.28)\r\n                  : Math.round(sum)}{\" \"}\r\n                {currency}\r\n              </p>\r\n              {/* <p>\r\n                {String.fromCharCode(8211)} OR {String.fromCharCode(8211)}\r\n              </p> */}\r\n              {/* <button\r\n                className=\"pay-option-button Gpay-button\"\r\n                onClick={() => {\r\n                  payWithRevolutApple();\r\n                  CheckoutLive(sum, currency, history);}}\r\n              >\r\n                {\" \"}\r\n                <p\r\n                  style={{display:'inline-block'}}\r\n                  > Issue order for <span>&nbsp;</span></p>\r\n                <img\r\n                  style={{display:'inline-block', verticalAlign:'middle'}}\r\n                  width=\"50px\"\r\n                  alt=\"Google Pay (GPay) Logo (2018-2020)\"\r\n                  src={\r\n                    \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/13/Google_Pay_%28GPay%29_Logo_%282018-2020%29.svg/512px-Google_Pay_%28GPay%29_Logo_%282018-2020%29.svg.png\"\r\n                  }\r\n                />\r\n              </button> */}\r\n              <div\r\n                style={{\r\n                  width: \"400px\",\r\n                  margin: \"10px auto\",\r\n                  borderRadius: \"10px\",\r\n                  padding: \"6px\",\r\n                }}\r\n                id=\"revolut-payment-request\"\r\n              ></div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const ConfirmOrder = async (payment_method_id, order_id) => {\r\n    let data = {payment_method_id, order_id}\r\n\r\n    try {\r\n        await fetch(\"/card/confirmOrderSandbox\", {\r\n            method: \"POST\",\r\n            body:JSON.stringify(data),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => data)\r\n        .then((body) => alert(\"Order was succesfully captured\"))\r\n    } catch (error) {\r\n        console.error(error);\r\n    throw error;\r\n    }\r\n}\r\n\r\nexport default ConfirmOrder;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RevolutCheckout from \"@revolut/checkout\";\r\nimport ConfirmOrder from \"./Requests/ConfirmOrder\";\r\n\r\n\r\nconst PaymentSandbox = () => {\r\n  const [name, setName] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [billingAddress, setBillingAddress] = useState({\r\n    countryCode: \"\",\r\n    region: \"\",\r\n    city: \"\",\r\n    streetLine1: \"\",\r\n    streetLine2: \"\",\r\n    postcode: \"\",\r\n  });\r\n\r\n  console.log(billingAddress);\r\n  const getBillingAddress = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setBillingAddress({ ...billingAddress, [name]: value });\r\n  };\r\n  \r\n  \r\n  let public_id = useHistory().location.state.public_id;\r\n  let order_id = useHistory().location.state.id;\r\n  let body = useHistory().location.state;\r\n  let for_merchant = \"0250a474-71a3-4993-ad98-1a24e3c815cc\";\r\n  let for_customer = \"b465452f-72f6-4237-83d9-3c2b1a5a9f2d\";\r\n  //============PAY WITH POPUP============\r\n\r\n  const payWithPopup = () =>\r\n    RevolutCheckout(public_id, \"sandbox\").then(function (instance) {\r\n      instance.payWithPopup({\r\n        onSuccess() {\r\n          window.alert(\"Thank you! Payment was succesful\");\r\n        },\r\n        onError(message) {\r\n          window.alert(message);\r\n        },\r\n        name,\r\n        email,\r\n        billingAddress,\r\n        savePaymentMethodFor: \"merchant\",\r\n      });\r\n    });\r\n\r\n  //============PAY WITH CARDFIELD============\r\n\r\n  RevolutCheckout(public_id, \"sandbox\").then(function (instance) {\r\n    var card = instance.createCardField({\r\n      target: document.getElementById(\"card-field\"),\r\n      onSuccess() {\r\n        setTimeout(() => {\r\n          window.alert(\"Thank you! Payment completed\");\r\n        }, 1000);\r\n      },\r\n      onError(message) {\r\n        window.alert(`Oh no :( ${message}.`);\r\n      },\r\n    });\r\n\r\n    document\r\n      .getElementById(\"button-submit\")\r\n      .addEventListener(\"click\", function () {\r\n        card.submit({\r\n          name,\r\n          email,\r\n          billingAddress,\r\n        });\r\n      });\r\n  });\r\n\r\n  //============PAY WITH REVOLUTPAY============\r\n\r\n  React.useEffect(() => {\r\n    RevolutCheckout(public_id, \"sandbox\").then(function (instance) {\r\n      instance.revolutPay({\r\n        target: document.getElementById(\"revolut-pay\"),\r\n        phone: \"+441632960022\", // recommended\r\n        buttonStyle: {variant:\"light-outlined\"},\r\n        onSuccess() {\r\n          console.log(\"Payment completed\");\r\n        },\r\n        onError(error) {\r\n          console.error(\"Payment failed: \" + error.message);\r\n        },\r\n      });\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"payment-sandbox-page\" style={{ display: \"grid\", gridTemplateColumns: \"2fr 1fr\" }}>\r\n      <div>\r\n        <Link className=\"pay-option-button\" to=\"/\">Home</Link>\r\n        <div>\r\n          <p>Use the folowing test cards for succesful payments:</p>\r\n          <p>Visa: 4929420573595709</p>\r\n          <p>Mastercard: 5281438801804148</p>\r\n          <p>\r\n            For expiry date use any future date, and for CVV any numbers you\r\n            wish\r\n          </p>\r\n        </div>\r\n        <form\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"50%\",\r\n            margin: \"10px auto\",\r\n          }}\r\n          onSubmit={(e) => e.preventDefault()}\r\n        >\r\n          <div style={{ display: \"flex\", alignItems: \"stretch\" }}>\r\n            <label></label>\r\n            <input\r\n              name=\"full_name\"\r\n              placeholder=\"Full name\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"stretch\",\r\n            }}\r\n          >\r\n            <label></label>\r\n            <input\r\n              name=\"email\"\r\n              placeholder=\"customer@example.com\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label></label>\r\n            <div name=\"card\"></div>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <label>Billing Address</label>\r\n\r\n            <input\r\n              name=\"countryCode\"\r\n              placeholder=\"Country Code\"\r\n              onChange={getBillingAddress}\r\n            />\r\n            <input\r\n              name=\"region\"\r\n              placeholder=\"Region\"\r\n              onChange={getBillingAddress}\r\n            />\r\n            <input\r\n              name=\"city\"\r\n              placeholder=\"City\"\r\n              onChange={getBillingAddress}\r\n            />\r\n            <input\r\n              name=\"streetLine1\"\r\n              placeholder=\"Address line 1\"\r\n              onChange={getBillingAddress}\r\n            />\r\n            <input\r\n              name=\"streetLine2\"\r\n              placeholder=\"Address line 2\"\r\n              onChange={getBillingAddress}\r\n            />\r\n            <input\r\n              name=\"postcode\"\r\n              placeholder=\"Postal Code\"\r\n              onChange={getBillingAddress}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div\r\n          style={{\r\n            width: \"400px\",\r\n            margin: \"10px auto\",\r\n            border: \"solid black 3px\",\r\n            borderRadius: \"10px\",\r\n            padding: \"6px\",\r\n            background:\"#fff\"\r\n          }}\r\n          id=\"card-field\"\r\n        ></div>\r\n        <div\r\n          className=\"payButtons\"\r\n          style={{\r\n            margin: \"10px auto\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"40%\",\r\n          }}\r\n        >\r\n          <button className='pay-option-button' id=\"button-submit\">Pay with Card</button>\r\n          <button className='pay-option-button' onClick={() => payWithPopup()}>Pay with Popup</button>\r\n          <button\r\n                className=\"pay-option-button\"\r\n                title=\"For paying with saved payment method\"\r\n                onClick={() => ConfirmOrder(for_customer, order_id)}\r\n              >\r\n                {\" \"}\r\n                Confirm Order\r\n              </button>        </div>\r\n        <div\r\n          style={{\r\n            width: \"400px\",\r\n            margin: \"10px auto\",\r\n            borderRadius: \"10px\",\r\n            padding: \"6px\",\r\n          }}\r\n          id=\"revolut-pay\"\r\n        ></div>\r\n        <div id=\"revolut-payment-request\"></div>\r\n      </div>\r\n      <div>\r\n        <pre>\r\n          <strong>Order</strong>: {JSON.stringify(body, undefined, 2)}\r\n        </pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSandbox;\r\n","const UpdateOrderLive = async (sum, currency, order_id, history) => {\r\n  let data = { amount: sum, currency:currency, order_id:order_id};\r\n\r\n  try {\r\n    await fetch(\"/card/updateOrderLive\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => data)\r\n      .then((body) => {\r\n        history.push(\"/cardLive\", body);\r\n        console.log('update Order response', body)\r\n      });\r\n  } catch (err) {\r\n    console.error(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default UpdateOrderLive;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RevolutCheckout from \"@revolut/checkout\";\r\nimport UpdateOrderLive from \"./Requests/UpdateOrder\"\r\n\r\nconst PaymentLive = () => {\r\n  const [name, setName] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [billingAddress, setBillingAddress] = useState({\r\n    countryCode: \"\",\r\n    region: \"\",\r\n    city: \"\",\r\n    streetLine1: \"\",\r\n    streetLine2: \"\",\r\n    postcode: \"\",\r\n  });\r\n\r\n  console.log(billingAddress);\r\n  const getBillingAddress = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setBillingAddress({ ...billingAddress, [name]: value });\r\n  };\r\n\r\n  //============PAY WITH POPUP============\r\n  let history = useHistory();\r\n  let public_id = useHistory().location.state.public_id;\r\n  let order_id = useHistory().location.state.id;\r\n  let sum = useHistory().location.state.order_amount.value\r\n  let currency = useHistory().location.state.order_amount.currency\r\n  let body = useHistory().location.state\r\n\r\n  console.log(\"public_id-Live\", public_id);\r\n  console.log(\"order_id-Live\", order_id);\r\n  console.log('amount', sum)\r\n  console.log('body', body)\r\n\r\n  //============PAY WITH POPUP============\r\n\r\n  const payWithPopup = () =>\r\n    RevolutCheckout(public_id, \"prod\").then(function (instance) {\r\n      instance.payWithPopup({\r\n        onSuccess() {\r\n          window.alert(\"Thank you! Payment was succesful\");\r\n        },\r\n        onError(message) {\r\n          window.alert(message);\r\n        },\r\n        name,\r\n        email,\r\n        savePaymentMethodFor: \"merchant\",\r\n      });\r\n    });\r\n\r\n  //============PAY WITH CARDFIELD============\r\n\r\n  RevolutCheckout(public_id, \"prod\").then(function (instance) {\r\n    var card = instance.createCardField({\r\n      target: document.getElementById(\"card-field\"),\r\n      onSuccess() {\r\n        setTimeout(() => {\r\n          window.alert(\"Thank you! Payment completed\");\r\n        }, 1000);\r\n      },\r\n      onError(message) {\r\n        window.alert(`Oh no :( ${message}`);\r\n      },\r\n    });\r\n\r\n    document\r\n      .getElementById(\"button-submit\")\r\n      .addEventListener(\"click\", function () {\r\n        card.submit({\r\n          name,\r\n          email,\r\n          billingAddress,\r\n        });\r\n      });\r\n  });\r\n\r\n  //============PAY WITH REVOLUTPAY============\r\n\r\n    RevolutCheckout(public_id, \"prod\").then(function (instance) {\r\n      console.log(\"revolutpay function fired\")\r\n      instance.revolutPay({\r\n        target: document.getElementById(\"revolut-pay\"),\r\n        phone: \"+441632960022\", // recommended\r\n        buttonStyle: {variant:\"light-outlined\"},\r\n        onSuccess() {\r\n          console.log(\"Payment completed\");\r\n        },\r\n        onError(error) {\r\n          console.error(\"Payment failed: \" + error.message);\r\n        },\r\n      });\r\n    });\r\n\r\n  //============PAY WITH APPLE/GOOGLE PAY============\r\n\r\n    const payWithRevolutApple = () => {\r\n    // React.useEffect(() => {\r\n\r\n      const RC = RevolutCheckout(public_id, \"prod\");\r\n      const shippingOptions = [\r\n        {\r\n          id: \"flex\",\r\n          label: \"The big flex express shipping\",\r\n          amount: 1,\r\n          description: \"The shipping method faster than batman\",\r\n        },\r\n        {\r\n          id: \"countrystrong\",\r\n          label: \"Country strong shipping\",\r\n          amount: 3,\r\n        description: \"The shipping method faster than superman\",\r\n      },\r\n    ];\r\n\r\n    const paymentRequest = RC.paymentRequest({\r\n      target: document.getElementById(\"revolut-payment-request\"),\r\n      requestShipping: true,\r\n      shippingOptions,\r\n      onShippingOptionChange: async (selectedShippingOption) => {\r\n        console.log(\"amount frontend\", selectedShippingOption.label, sum+selectedShippingOption.amount)\r\n        await UpdateOrderLive(sum+selectedShippingOption.amount, currency, order_id, history)\r\n        // ideally compute new total price. calls can be made to a server here\r\n        return Promise.resolve({\r\n          status: \"success\",\r\n          total: {\r\n           amount: sum + selectedShippingOption.amount,\r\n          },\r\n        });\r\n      },\r\n      onShippingAddressChange: (selectedShippingAddress) => {\r\n        // ideally compute new total price. calls can be made to a server here\r\n        const newShippingOption = {\r\n          id: \"new-shipping\",\r\n          label: \"The new ultra-fast method\",\r\n          amount: 5,\r\n          description: \"The shipping method faster than lightening\",\r\n        };\r\n\r\n        return Promise.resolve({\r\n          status: \"success\",\r\n          shippingOptions: [newShippingOption, ...shippingOptions],\r\n          total: {\r\n            // amount: 5\r\n            amount: sum + newShippingOption.amount,\r\n          },\r\n        });\r\n      },\r\n      onSuccess() {\r\n        setResult(\"Paid\");\r\n        alert(\"Payment with Google/Apple pay was succesfull!\")\r\n      },\r\n      onError(error) {\r\n        setResult(`Error: ${error.message}`);\r\n        alert(error)\r\n      },\r\n      // buttonStyle: { size: 'small', variant: 'light-outlined' },\r\n    });\r\n    \r\n    paymentRequest.canMakePayment().then((result) => {\r\n      if (result) {\r\n        paymentRequest.render();\r\n      } else {\r\n        setResult(\"Not supported\");\r\n        paymentRequest.destroy();\r\n      }\r\n    });\r\n    };\r\n  // }, [])\r\n    \r\n    return (\r\n      <div className=\"payment-live-page\" style={{display:'grid', gridTemplateColumns: '2fr 1fr'}}>\r\n    <div>\r\n      <Link className=\"pay-option-button\" to=\"/\" >Home</Link>\r\n      <form\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          width: \"50%\",\r\n          margin: \" 10px auto\",\r\n        }}\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <div style={{ display: \"flex\", justifyContent:'center' }}>\r\n          <label></label>\r\n          <input\r\n            name=\"full_name\"\r\n            placeholder=\"Full Name\"\r\n            style={{width:'100%'}}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div\r\n          style={{ display: \"flex\", justifyContent:'center'}}\r\n        >\r\n          <label></label>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"customer@example.com\"\r\n            style={{width:'100%'}}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label></label>\r\n          <div name=\"card\"></div>\r\n        </div>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <label>Billing Address</label>\r\n\r\n          <input\r\n            name=\"countryCode\"\r\n            placeholder=\"Country Code\"\r\n            onChange={getBillingAddress}\r\n          />\r\n          <input\r\n            name=\"region\"\r\n            placeholder=\"Region\"\r\n            onChange={getBillingAddress}\r\n          />\r\n          <input name=\"city\" placeholder=\"City\" onChange={getBillingAddress} />\r\n          <input\r\n            name=\"streetLine1\"\r\n            placeholder=\"Address line 1\"\r\n            onChange={getBillingAddress}\r\n          />\r\n          <input\r\n            name=\"streetLine2\"\r\n            placeholder=\"Address line 2\"\r\n            onChange={getBillingAddress}\r\n          />\r\n          <input\r\n            name=\"postcode\"\r\n            placeholder=\"Postal Code\"\r\n            onChange={getBillingAddress}\r\n          />\r\n        </div>\r\n      </form>\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          margin: \"10px auto\",\r\n          border: \"solid black 3px\",\r\n          borderRadius: \"10px\",\r\n          padding: \"6px\",\r\n          background:\"#fff\"\r\n        }}\r\n        id=\"card-field\"\r\n      ></div>\r\n      <div\r\n        className=\"payButtons\"\r\n        style={{\r\n          margin: \"10px auto\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          width: \"60%\",\r\n        }}\r\n      >\r\n        <button className='pay-option-button' id=\"button-submit\">Pay with Card</button>\r\n        <button className='pay-option-button' onClick={() => payWithPopup()}>Pay with Popup</button>\r\n        <button className='pay-option-button' onClick={() => payWithRevolutApple()}>\r\n          Pay with Apple/Google Pay\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          margin: \"10px auto\",\r\n          borderRadius: \"10px\",\r\n          padding: \"6px\",\r\n        }}\r\n        id=\"revolut-pay\"\r\n      ></div>\r\n      <div\r\n        style={{\r\n          width: \"400px\",\r\n          margin: \"10px auto\",\r\n          borderRadius: \"10px\",\r\n          padding: \"6px\",\r\n        }}\r\n        id=\"revolut-payment-request\"\r\n      ></div>\r\n    </div>\r\n    <div>\r\n        <pre>\r\n         <strong>Order</strong>: {JSON.stringify(body, undefined, 2)}\r\n        </pre>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentLive;\r\n","import React from 'react'\r\nimport Home from './Home'\r\nimport PaymentSandbox from './PaymentSandbox'\r\nimport PaymentLive from './PaymentLive';\r\nimport {\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path='/cardSandbox'>\r\n            <PaymentSandbox />\r\n          </Route>\r\n          <Route path='/cardLive'>\r\n            <PaymentLive />\r\n          </Route>     \r\n          <Route path='/*'>\r\n            <div> Path not found</div>\r\n          </Route>\r\n        </Switch>\r\n    )   \r\n}\r\n\r\nexport default Routes","import './App.css';\r\nimport Routes from './Components/Routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('react-app')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}